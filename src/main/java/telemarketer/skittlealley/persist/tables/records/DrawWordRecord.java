/*
 * This file is generated by jOOQ.
 */
package telemarketer.skittlealley.persist.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;
import telemarketer.skittlealley.persist.tables.DrawWordTable;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.11.9"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class DrawWordRecord extends UpdatableRecordImpl<DrawWordRecord> implements Record3<Integer, String, String> {

    private static final long serialVersionUID = 1233275046;

    /**
     * Setter for <code>PUBLIC.DRAW_WORD.ID</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>PUBLIC.DRAW_WORD.ID</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>PUBLIC.DRAW_WORD.WORD</code>.
     */
    public void setWord(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>PUBLIC.DRAW_WORD.WORD</code>.
     */
    public String getWord() {
        return (String) get(1);
    }

    /**
     * Setter for <code>PUBLIC.DRAW_WORD.WORD_TIP</code>.
     */
    public void setWordTip(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>PUBLIC.DRAW_WORD.WORD_TIP</code>.
     */
    public String getWordTip() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, String, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return DrawWordTable.DRAW_WORD.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return DrawWordTable.DRAW_WORD.WORD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return DrawWordTable.DRAW_WORD.WORD_TIP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getWord();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getWordTip();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getWord();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getWordTip();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DrawWordRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DrawWordRecord value2(String value) {
        setWord(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DrawWordRecord value3(String value) {
        setWordTip(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DrawWordRecord values(Integer value1, String value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DrawWordRecord
     */
    public DrawWordRecord() {
        super(DrawWordTable.DRAW_WORD);
    }

    /**
     * Create a detached, initialised DrawWordRecord
     */
    public DrawWordRecord(Integer id, String word, String wordTip) {
        super(DrawWordTable.DRAW_WORD);

        set(0, id);
        set(1, word);
        set(2, wordTip);
    }
}
